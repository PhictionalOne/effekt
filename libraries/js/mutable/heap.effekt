module mutable/heap

extern js """
var heap$data = {};
var heap$pointer = 0;

function heap$fresh(init) {
    const ref = heap$pointer++;
    heap$data[ref] = init;
    return ref
}

function heap$put(ref, value) {
    heap$data[ref] = value;
    return null
}

function get$impl(ref) {
    return heap$data[ref];
}
"""

extern type HeapRef[T]

extern io def fresh[T](init: T): HeapRef[T] =
    js "heap$fresh(${init})"

extern io def put[T](ref: HeapRef[T], value: T): Unit =
    js "heap$put(${ref}, ${value})"

extern io def get[T](ref: HeapRef[T]): T =
    js "heap$data[${ref}]"